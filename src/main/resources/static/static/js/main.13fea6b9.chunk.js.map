{"version":3,"sources":["actions/projectActions.js","actions/types.js","Components/Project/Projectitem.js","Components/Project/CreateProjectButton.js","Components/Dashboard.js","security Utils/setJWTToken.js","actions/securityActions.js","Components/Layout/Header.js","Components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","Components/Project/UpdateProject.js","Components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","Components/ProjectBoard/Backlog.js","Components/ProjectBoard/ProjectBoard.js","Components/ProjectBoard/ProjectTasks/AddProjectTask.js","Components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","Components/Layout/Landing.js","Components/UserManagement/Register.js","Components/UserManagement/Login.js","security Utils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","Projectitem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","class","aria-hidden","fullName","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","parameter","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","e","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","prorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","boardAlgorithm","res","AddProjectTask","dueDate","newProjectTask","addProjectTask","projectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","fullname","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13fea6b9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n     await axios.post(\r\n      \"https://macpdemoproject.herokuapp.com/api/project\",\r\n      project\r\n    );\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const response = await axios.get(\"https://macpdemoproject.herokuapp.com/api/project/all\");\r\n  dispatch({ type: GET_PROJECTS, payload: response.data });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`https://macpdemoproject.herokuapp.com/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data\"\r\n    )\r\n  ) {\r\n    await axios.delete(`https://macpdemoproject.herokuapp.com/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\nexport const SET_CURRENT_USER=\"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nclass Projectitem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      // Project Item Component\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      // End of Project Item Component\r\n    );\r\n  }\r\n}\r\n\r\nProjectitem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(Projectitem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport Projectitem from \"./Project/Projectitem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton></CreateProjectButton>\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <Projectitem key={project.id} project={project}></Projectitem>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken=token =>{\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"]=token;\r\n    }else{\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n}\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../security Utils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"https://macpdemoproject.herokuapp.com/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    //post => Login Request\r\n    const res = await axios.post(\r\n      \"https://macpdemoproject.herokuapp.com/api/users/login\",\r\n      LoginRequest\r\n    );\r\n    //extract token from res.data\r\n    const { token } = res.data;\r\n    //store the token in the LocalStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set our token in our header\r\n    setJWTToken(token);\r\n    //decode token on React\r\n    const decoded = jwt_decode(token);\r\n    //dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (error) {\r\n      dispatch({\r\n          type:GET_ERRORS,\r\n          payload:error.response.data\r\n      })\r\n  }\r\n};\r\n\r\nexport const logout=()=> dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false)\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {},\r\n      });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n            {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              onClick={this.logout.bind(this)}\r\n              to=\"/logout\"\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hoooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(parameter) {\r\n    this.setState({ [parameter.target.name]: parameter.target.value });\r\n  }\r\n\r\n  onSubmit(parameter) {\r\n    parameter.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      //solo si lo hacemos por separado onChange={this.onChange.bind(this)}\r\n\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return { ...state, project_tasks: action.payload };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task => project_task.projectSequence !== action.payload)\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {SET_CURRENT_USER} from \"../actions/types\";\r\n\r\nconst initialState={\r\n    user:{},\r\n    validToken:false\r\n}\r\n\r\nconst booleanActionPayload=(payload)=>{\r\n    if(payload){\r\n        return true\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken:booleanActionPayload(action.payload),\r\n                user:action.payload\r\n            }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog:backlogReducer,\r\n  security:securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Upate Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    disabled\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let prorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      prorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      prorityString = \"MEDIUM\";\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      prorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority:{prorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View-Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS,GET_BACKLOG,GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, projectTask, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(\r\n      `https://macpdemoproject.herokuapp.com/api/backlog/${backlog_id}`,\r\n      projectTask\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog=backlog_id=> async dispatch =>{\r\n  try {\r\n    const res= await axios.get(`https://macpdemoproject.herokuapp.com/api/backlog/${backlog_id}`)\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload:res.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nexport const getProjectTask=(backlog_id,pt_id,history)=> async dispatch =>{\r\n    try {\r\n      const res=await axios.get(`https://macpdemoproject.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`)\r\n      dispatch({\r\n        type:GET_PROJECT_TASK,\r\n        payload:res.data\r\n      })\r\n      \r\n    } catch (error) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n}\r\nexport const updateProjectTask=(backlog_id,pt_id,project_task,history)=>async dispatch=>{\r\n  try {\r\n    const res=await axios.patch(`https://macpdemoproject.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`,project_task)\r\n  \r\n     history.push(`/projectBoard/${backlog_id}`)\r\n    dispatch({\r\n      type:GET_ERRORS,\r\n      payload:{}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type:GET_ERRORS,\r\n      payload:error.response.data\r\n    });\r\n  }\r\n}\r\n\r\nexport const deleteProjectTask=(backlog_id,pt_id)=> async dispatch =>{\r\n  if(window.confirm(`Your are deleting project task ${pt_id}, this action cannot be undone`)){\r\n    await axios.delete(`https://macpdemoproject.herokuapp.com/api/backlog/${backlog_id}/${pt_id}`)\r\n    dispatch({\r\n      type:DELETE_PROJECT_TASK,\r\n      payload:pt_id\r\n    });\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n    const tasks = project_tasks.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getBacklog} from \"../../actions/backlogActions\"\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n\r\n    //constructor to handle errors\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id}=this.props.match.params;\r\n        const {project_tasks}=this.props.backlog\r\n        const {errors}=this.state;\r\n\r\n\r\n        let boardContent;\r\n\r\n        const boardAlgorithm=(errors,project_tasks)=>{\r\n            if(project_tasks.length<1){\r\n                if(errors.projectNotFound){\r\n                return( <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                     {errors.projectNotFound}\r\n                 </div>);\r\n                }\r\n                else if(errors.projectIdentifier){\r\n                    return( <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                         {errors.projectIdentifier}\r\n                     </div>);\r\n                    }\r\n                else{\r\n                    return(<div className=\"alert alert-info text-center\">No Project Tasks on this board</div>)\r\n                }\r\n            } else{\r\n               return( <Backlog project_tasks={project_tasks}></Backlog>)\r\n            }\r\n        };\r\n\r\n        boardContent=boardAlgorithm(errors,project_tasks);\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`}  className=\"btn btn-primary mb-3\">\r\n               <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Create Project Task\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {boardContent}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nProjectBoard.propTypes={\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    backlog:state.backlog,\r\n    errors:state.errors\r\n})\r\nexport default connect(mapStateToProps\r\n    ,{getBacklog}\r\n    )(ProjectBoard);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hoooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(parameter) {\r\n    this.setState({ [parameter.target.name]: parameter.target.value });\r\n  }\r\n\r\n  onSubmit(parameter) {\r\n    parameter.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes={\r\n  security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps= state=> ({\r\n  security:state.security\r\n})\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors:{}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props}></Component>\r\n      ) : (\r\n        <Redirect to=\"login\"></Redirect>\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Header from \"./Components/Layout/Header\";\r\n//Enabling boostrap\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./Components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./Components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./Components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./Components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./Components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./Components/Layout/Landing\";\r\nimport Register from \"./Components/UserManagement/Register\";\r\nimport Login from \"./Components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./security Utils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./security Utils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    //handle logout\r\n    store.dispatch(logout());\r\n\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header></Header>\r\n\r\n          {\r\n            //Public Routes\r\n          }\r\n\r\n          <Route exact path=\"/\" component={Landing}></Route>\r\n          <Route exact path=\"/register\" component={Register}></Route>\r\n          <Route exact path=\"/login\" component={Login}></Route>\r\n          {\r\n            //Private Routes\r\n          }\r\n          <Switch>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/dashboard\"\r\n              component={Dashboard}\r\n            ></SecuredRoute>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProject\"\r\n              component={AddProject}\r\n            ></SecuredRoute>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            ></SecuredRoute>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            ></SecuredRoute>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            ></SecuredRoute>\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            ></SecuredRoute>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}